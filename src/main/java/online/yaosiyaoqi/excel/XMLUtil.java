package online.yaosiyaoqi.excel;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import javax.xml.bind.JAXBContext;import javax.xml.bind.JAXBException;import javax.xml.bind.Marshaller;import javax.xml.bind.Unmarshaller;import java.io.*;public class XMLUtil {	protected static Logger log = LoggerFactory.getLogger( XMLUtil.class );	public static String convertToXml( Object obj ) {		StringWriter result = new StringWriter();		try {			JAXBContext context = JAXBContext.newInstance( obj.getClass() );			Marshaller marshaller = context.createMarshaller();			marshaller.marshal( obj, result );			String xml = result.toString();			return xml;		} catch( JAXBException e1 ) {			log.error( e1.getMessage() );		}  finally {			try {				if(null!=result){					result.close();				}			} catch( IOException e ) {				e.printStackTrace();			}		}		return "";	}	@SuppressWarnings( "unchecked" )	public static <T> T formXmlToObject( String xml, Class<? extends T> cls ) {		InputStream iStream = null;		try {			JAXBContext context = JAXBContext.newInstance( cls );			iStream = new ByteArrayInputStream( xml.getBytes( "utf-8" ) );			Unmarshaller um = context.createUnmarshaller();			T obj = ( T )um.unmarshal( iStream );			return obj;		} catch( JAXBException e ) {			log.error( e.getMessage() );		} catch( UnsupportedEncodingException e ) {			log.error( e.getMessage() );		} finally {			if(null!=iStream){				try {					iStream.close();				} catch( IOException e ) {					e.printStackTrace();				}			}		}		return null;	}	@SuppressWarnings( "unchecked" )	public static <T> T formXmlToObject( InputStream ins, Class<? extends T> cls ) {		try {			if(null!=ins){				JAXBContext context = JAXBContext.newInstance( cls );				Unmarshaller um = context.createUnmarshaller();				T obj = ( T )um.unmarshal( ins );				return obj;			}		} catch( Exception e ) {			e.printStackTrace();			log.error( e.getMessage() );		} finally {			try {				if(null!=ins){					ins.close();				}			} catch( IOException e ) {				log.error( e.getMessage() );				ins = null;			}		}		return null;	}}